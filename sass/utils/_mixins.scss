// Media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == "xxl" {
    @media (max-width: $breakpoint-xxl) { @content; }
  }
  @else if $breakpoint == "xl" {
    @media (max-width: $breakpoint-xl) { @content; }
  }
  @else if $breakpoint == "lg" {
    @media (max-width: $breakpoint-lg) { @content; }
  }
  @else if $breakpoint == "md" {
    @media (max-width: $breakpoint-md) { @content; }
  }
  @else if $breakpoint == "sm" {
    @media (max-width: $breakpoint-sm) { @content; }
  }
  @else if $breakpoint == "xs" {
    @media (max-width: $breakpoint-xs) { @content; }
  }
}

// Flexbox
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-multiline-truncate($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Buttons
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  border-radius: $border-radius-md;
  font-weight: $font-weight-medium;
  transition: all $transition-base;
  cursor: pointer;
  border: none;
  outline: none;
}

@mixin button-primary {
  @include button-base;
  background-color: $background-color_3;
  color: $text-color_2;
  
  &:hover {
    background-color: darken($background-color_3, 10%);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  border: 1px solid $background-color_3;
  color: $text-color_1;
  
  &:hover {
    background-color: $background-color_3;
    color: $text-color_2;
  }
}

// Grid
@mixin make-container {
  width: 100%;
  padding-right: $grid-gutter-width / 2;
  padding-left: $grid-gutter-width / 2;
  margin-right: auto;
  margin-left: auto;
}

@mixin make-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$grid-gutter-width / 2;
  margin-left: -$grid-gutter-width / 2;
}

@mixin make-col($size) {
  flex: 0 0 percentage($size / $grid-columns);
  max-width: percentage($size / $grid-columns);
  padding-right: $grid-gutter-width / 2;
  padding-left: $grid-gutter-width / 2;
}

// Animations
@mixin fade-in {
  animation: fadeIn $transition-slow;
}

@mixin slide-in {
  animation: slideIn $transition-slow;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

// Figma adaptation
@mixin figma-adapt($property, $desktop, $tablet, $mobile) {
  #{$property}: $desktop;

  @include respond-to("lg") {
    #{$property}: $tablet;
  }

  @include respond-to("sm") {
    #{$property}: $mobile;
  }
}

@mixin figma-padding($top, $right, $bottom, $left) {
  padding: $top $right $bottom $left;

  @include respond-to("lg") {
    padding: $top * 0.8 $right * 0.8 $bottom * 0.8 $left * 0.8;
  }

  @include respond-to("sm") {
    padding: $top * 0.6 $right * 0.6 $bottom * 0.6 $left * 0.6;
  }
}

@mixin figma-margin($top, $right, $bottom, $left) {
  margin: $top $right $bottom $left;

  @include respond-to("lg") {
    margin: $top * 0.8 $right * 0.8 $bottom * 0.8 $left * 0.8;
  }

  @include respond-to("sm") {
    margin: $top * 0.6 $right * 0.6 $bottom * 0.6 $left * 0.6;
  }
}

@mixin figma-font($size, $weight, $line-height) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;

  @include respond-to("lg") {
    font-size: $size * 0.9;
    line-height: $line-height * 0.9;
  }

  @include respond-to("sm") {
    font-size: $size * 0.8;
    line-height: $line-height * 0.8;
  }
}

@mixin figma-gap($gap) {
  gap: $gap;

  @include respond-to("lg") {
    gap: $gap * 0.8;
  }

  @include respond-to("sm") {
    gap: $gap * 0.6;
  }
}

@mixin figma-flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;

  @include respond-to("lg") {
    @if $direction == row {
      flex-direction: column;
    }
  }
}

@mixin figma-grid($columns, $gap) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;

  @include respond-to("lg") {
    grid-template-columns: repeat(min($columns, 2), 1fr);
    gap: $gap * 0.8;
  }

  @include respond-to("sm") {
    grid-template-columns: 1fr;
    gap: $gap * 0.6;
  }
}

@mixin figma-container($max-width) {
  @include make-container;
  max-width: $max-width;

  @include respond-to("lg") {
    max-width: $max-width * 0.9;
  }

  @include respond-to("sm") {
    max-width: $max-width * 0.8;
  }
}

@mixin figma-section {
  @include figma-padding($spacing-xxl, 0, $spacing-xxl, 0);
  
  @include respond-to("lg") {
    @include figma-padding($spacing-xl, 0, $spacing-xl, 0);
  }

  @include respond-to("sm") {
    @include figma-padding($spacing-lg, 0, $spacing-lg, 0);
  }
}

@mixin figma-card {
  background-color: $background-color_1;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  transition: transform $transition-base, box-shadow $transition-base;

  &:hover {
    transform: translateY(-5px);
    box-shadow: $shadow-lg;
  }

  @include respond-to("lg") {
    border-radius: $border-radius-md;
  }

  @include respond-to("sm") {
    border-radius: $border-radius-sm;
  }
}

@mixin figma-image {
  width: 100%;
  height: auto;
  object-fit: cover;
  border-radius: $border-radius-md;

  @include respond-to("lg") {
    border-radius: $border-radius-sm;
  }
}

@mixin figma-button($type: primary) {
  @if $type == primary {
    @include button-primary;
  } @else {
    @include button-secondary;
  }

  @include respond-to("lg") {
    padding: $spacing-sm * 0.8 $spacing-md * 0.8;
    font-size: $font-size-sm;
  }

  @include respond-to("sm") {
    padding: $spacing-sm * 0.6 $spacing-md * 0.6;
    font-size: $font-size-xs;
  }
} 